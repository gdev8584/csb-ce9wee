{"version":3,"sources":["IgnoreCaseToggle.js","ParagraphInput.js","WordInput.js","App.js","index.js"],"names":["IgnoreCaseToggle","checked","onChange","htmlFor","type","id","e","ParagraphInput","pRef","contentEditable","dangerouslySetInnerHTML","__html","current","innerHTML","ref","WordInput","handleChange","value","target","App","useState","word","setWord","wordCount","setWordCount","useRef","ignoreCase","setIgnoreCase","highlight","val","wordCase","newt","i","reg","RegExp","innerText","replaceAll","args","rootElement","document","getElementById","createRoot","render"],"mappings":"2MAEaA,EAAmB,SAAH,GAA+B,IAAzBC,EAAO,EAAPA,QAASC,EAAQ,EAARA,SAC1C,OACE,qCACE,uBAAOC,QAAQ,cAAa,0BAC5B,uBACEC,KAAK,WACLC,GAAG,cACHJ,QAASA,EACTC,SAAU,SAACI,GAAC,OAAKJ,GAAUD,EAAQ,MAI3C,ECZaM,EAAiB,SAAH,GAAkB,IAAZC,EAAI,EAAJA,KAC/B,OACE,4DAEE,qBACEH,GAAG,kBACHI,iBAAe,EAEfC,wBAAyB,CACvBC,OAAQH,EAAKI,QAAUJ,EAAKI,QAAQC,UAAY,mBAElDC,IAAKN,MAIb,ECfaO,EAAY,SAAH,GAA8B,IAAzBC,EAAY,EAAZA,aAAaC,EAAK,EAALA,MACpC,OACI,qCACI,uBAAOd,QAAQ,aAAY,+CAC3B,uBAAOE,GAAG,aAAaD,KAAM,OAAQF,SAAU,SAACI,GAAC,OAAGU,EAAaV,EAAEY,OAAOD,MAAM,EAAEA,MAAOA,MAGrG,EC0CeE,EA9CH,WACV,MAAwBC,mBAAS,IAAG,mBAA7BC,EAAI,KAAEC,EAAO,KACpB,EAAkCF,mBAAS,GAAE,mBAAtCG,EAAS,KAAEC,EAAY,KACxBV,EAAMW,mBACZ,EAAoCL,oBAAS,GAAM,mBAA5CM,EAAU,KAAEC,EAAa,KAC1BC,EAAY,SAACC,EAAKC,GACtB,IAAIC,EAAO,GACPC,EAAI,EACR,GAAIF,EAAU,CACZ,IAAMG,EAAM,IAAIC,OAAOL,EAAK,MAC5BE,EAAOjB,EAAIF,QAAQuB,UAAUC,WAAWH,GAAK,SAACI,GAE5C,OADAL,IACM,iCAAN,OAAwCK,EAAI,UAC9C,GACF,MACEN,EAAOjB,EAAIF,QAAQuB,UAAUC,WAAWP,GAAK,SAACQ,GAE5C,OADAL,IACM,iCAAN,OAAwCK,EAAI,UAC9C,IAEFb,EAAaQ,GAEblB,EAAIF,QAAQC,UAAYkB,CAC1B,EASA,OACE,sBAAK1B,GAAG,OAAM,UACZ,cAAC,EAAc,CAACG,KAAMM,IACtB,mDACkB,sBAAMT,GAAG,gBAAe,SAAEkB,OAE5C,cAAC,EAAS,CAACP,aAdS,SAACa,GACvBD,EAAUC,EAAKH,GACfJ,EAAQO,EACV,EAW8CZ,MAAOI,IACjD,uBACA,cAAC,EAAgB,CAACpB,QAASyB,EAAYxB,SAZhB,WACzB0B,EAAUP,GAAOK,GACjBC,GAAeD,EACjB,IAUI,sBAAMrB,GAAG,gBAAe,SAAEkB,MAGhC,EC5CMe,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAAC,EAAG,M","file":"static/js/main.ec6706d9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const IgnoreCaseToggle = ({ checked, onChange }) => {\r\n  return (\r\n    <>\r\n      <label htmlFor=\"ignore-case\">Ignore case?</label>\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"ignore-case\"\r\n        checked={checked}\r\n        onChange={(e) => onChange(!checked)}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ParagraphInput = ({ pRef }) => {\r\n  return (\r\n    <>\r\n      Enter paragraph here\r\n      <div\r\n        id=\"paragraph-input\"\r\n        contentEditable\r\n        // onChange={worker}\r\n        dangerouslySetInnerHTML={{\r\n          __html: pRef.current ? pRef.current.innerHTML : \"Enter Text Here\"\r\n        }}\r\n        ref={pRef}\r\n      ></div>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const WordInput = ({handleChange,value}) => {\r\n    return (\r\n        <>   \r\n            <label htmlFor=\"word-input\">Enter word to be highlighted here</label>\r\n            <input id=\"word-input\" type={\"text\"} onChange={(e)=>handleChange(e.target.value)} value={value}/>\r\n        </>\r\n    )\r\n}","import React, { useRef, useState } from \"react\";\nimport \"./styles.css\";\nimport { IgnoreCaseToggle } from \"./IgnoreCaseToggle\";\nimport { ParagraphInput } from \"./ParagraphInput\";\nimport { WordInput } from \"./WordInput\";\nconst App = () => {\n  const [word, setWord] = useState(\"\");\n  const [wordCount, setWordCount] = useState(0);\n  const ref = useRef();\n  const [ignoreCase, setIgnoreCase] = useState(false);\n  const highlight = (val, wordCase) => {\n    let newt = \"\";\n    let i = 0;\n    if (wordCase) {\n      const reg = new RegExp(val, \"ig\");\n      newt = ref.current.innerText.replaceAll(reg, (args) => {\n        i++;\n        return `<span class=\"highlighted-txt\">${args}</span>`;\n      });\n    } else {\n      newt = ref.current.innerText.replaceAll(val, (args) => {\n        i++;\n        return `<span class=\"highlighted-txt\">${args}</span>`;\n      });\n    }\n    setWordCount(i);\n\n    ref.current.innerHTML = newt;\n  };\n  const handleWordInput = (val) => {\n    highlight(val, ignoreCase);\n    setWord(val);\n  };\n  const handleChangeToggle = () => {\n    highlight(word, !ignoreCase);\n    setIgnoreCase(!ignoreCase);\n  };\n  return (\n    <div id=\"main\">\n      <ParagraphInput pRef={ref} />\n      <div>\n        Total matches:- <span id=\"words-counter\">{wordCount}</span>\n      </div>\n      <WordInput handleChange={handleWordInput} value={word} />\n      <br />\n      <IgnoreCaseToggle checked={ignoreCase} onChange={handleChangeToggle} />\n      <span id=\"words-counter\">{wordCount}</span>\n    </div>\n  );\n};\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}